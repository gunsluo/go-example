/*
 * Configurator
 *
 * Welcome to the Configurator HTTP API documentation. You will find documentation for all HTTP APIs here.
 *
 * API version: latest
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// AddMembersResponseData struct for AddMembersResponseData
type AddMembersResponseData struct {
	Created []string `json:"created,omitempty"`
	EmailAlreadyExists []string `json:"email_already_exists,omitempty"`
	PhoneMobileAlreadyExists []string `json:"phone_mobile_already_exists,omitempty"`
}

// NewAddMembersResponseData instantiates a new AddMembersResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddMembersResponseData() *AddMembersResponseData {
	this := AddMembersResponseData{}
	return &this
}

// NewAddMembersResponseDataWithDefaults instantiates a new AddMembersResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddMembersResponseDataWithDefaults() *AddMembersResponseData {
	this := AddMembersResponseData{}
	return &this
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *AddMembersResponseData) GetCreated() []string {
	if o == nil || o.Created == nil {
		var ret []string
		return ret
	}
	return o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddMembersResponseData) GetCreatedOk() ([]string, bool) {
	if o == nil || o.Created == nil {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *AddMembersResponseData) HasCreated() bool {
	if o != nil && o.Created != nil {
		return true
	}

	return false
}

// SetCreated gets a reference to the given []string and assigns it to the Created field.
func (o *AddMembersResponseData) SetCreated(v []string) {
	o.Created = v
}

// GetEmailAlreadyExists returns the EmailAlreadyExists field value if set, zero value otherwise.
func (o *AddMembersResponseData) GetEmailAlreadyExists() []string {
	if o == nil || o.EmailAlreadyExists == nil {
		var ret []string
		return ret
	}
	return o.EmailAlreadyExists
}

// GetEmailAlreadyExistsOk returns a tuple with the EmailAlreadyExists field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddMembersResponseData) GetEmailAlreadyExistsOk() ([]string, bool) {
	if o == nil || o.EmailAlreadyExists == nil {
		return nil, false
	}
	return o.EmailAlreadyExists, true
}

// HasEmailAlreadyExists returns a boolean if a field has been set.
func (o *AddMembersResponseData) HasEmailAlreadyExists() bool {
	if o != nil && o.EmailAlreadyExists != nil {
		return true
	}

	return false
}

// SetEmailAlreadyExists gets a reference to the given []string and assigns it to the EmailAlreadyExists field.
func (o *AddMembersResponseData) SetEmailAlreadyExists(v []string) {
	o.EmailAlreadyExists = v
}

// GetPhoneMobileAlreadyExists returns the PhoneMobileAlreadyExists field value if set, zero value otherwise.
func (o *AddMembersResponseData) GetPhoneMobileAlreadyExists() []string {
	if o == nil || o.PhoneMobileAlreadyExists == nil {
		var ret []string
		return ret
	}
	return o.PhoneMobileAlreadyExists
}

// GetPhoneMobileAlreadyExistsOk returns a tuple with the PhoneMobileAlreadyExists field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddMembersResponseData) GetPhoneMobileAlreadyExistsOk() ([]string, bool) {
	if o == nil || o.PhoneMobileAlreadyExists == nil {
		return nil, false
	}
	return o.PhoneMobileAlreadyExists, true
}

// HasPhoneMobileAlreadyExists returns a boolean if a field has been set.
func (o *AddMembersResponseData) HasPhoneMobileAlreadyExists() bool {
	if o != nil && o.PhoneMobileAlreadyExists != nil {
		return true
	}

	return false
}

// SetPhoneMobileAlreadyExists gets a reference to the given []string and assigns it to the PhoneMobileAlreadyExists field.
func (o *AddMembersResponseData) SetPhoneMobileAlreadyExists(v []string) {
	o.PhoneMobileAlreadyExists = v
}

func (o AddMembersResponseData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Created != nil {
		toSerialize["created"] = o.Created
	}
	if o.EmailAlreadyExists != nil {
		toSerialize["email_already_exists"] = o.EmailAlreadyExists
	}
	if o.PhoneMobileAlreadyExists != nil {
		toSerialize["phone_mobile_already_exists"] = o.PhoneMobileAlreadyExists
	}
	return json.Marshal(toSerialize)
}

type NullableAddMembersResponseData struct {
	value *AddMembersResponseData
	isSet bool
}

func (v NullableAddMembersResponseData) Get() *AddMembersResponseData {
	return v.value
}

func (v *NullableAddMembersResponseData) Set(val *AddMembersResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableAddMembersResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableAddMembersResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddMembersResponseData(val *AddMembersResponseData) *NullableAddMembersResponseData {
	return &NullableAddMembersResponseData{value: val, isSet: true}
}

func (v NullableAddMembersResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddMembersResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


