/*
 * Configurator
 *
 * Welcome to the Configurator HTTP API documentation. You will find documentation for all HTTP APIs here.
 *
 * API version: latest
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// OrganizatoinMember struct for OrganizatoinMember
type OrganizatoinMember struct {
	// Mail is email of the member.
	Mail string `json:"mail"`
	// Name is name of the member.
	Name string `json:"name"`
}

// NewOrganizatoinMember instantiates a new OrganizatoinMember object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizatoinMember(mail string, name string) *OrganizatoinMember {
	this := OrganizatoinMember{}
	this.Mail = mail
	this.Name = name
	return &this
}

// NewOrganizatoinMemberWithDefaults instantiates a new OrganizatoinMember object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizatoinMemberWithDefaults() *OrganizatoinMember {
	this := OrganizatoinMember{}
	return &this
}

// GetMail returns the Mail field value
func (o *OrganizatoinMember) GetMail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Mail
}

// GetMailOk returns a tuple with the Mail field value
// and a boolean to check if the value has been set.
func (o *OrganizatoinMember) GetMailOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Mail, true
}

// SetMail sets field value
func (o *OrganizatoinMember) SetMail(v string) {
	o.Mail = v
}

// GetName returns the Name field value
func (o *OrganizatoinMember) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *OrganizatoinMember) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *OrganizatoinMember) SetName(v string) {
	o.Name = v
}

func (o OrganizatoinMember) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["mail"] = o.Mail
	}
	if true {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableOrganizatoinMember struct {
	value *OrganizatoinMember
	isSet bool
}

func (v NullableOrganizatoinMember) Get() *OrganizatoinMember {
	return v.value
}

func (v *NullableOrganizatoinMember) Set(val *OrganizatoinMember) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizatoinMember) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizatoinMember) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizatoinMember(val *OrganizatoinMember) *NullableOrganizatoinMember {
	return &NullableOrganizatoinMember{value: val, isSet: true}
}

func (v NullableOrganizatoinMember) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizatoinMember) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


