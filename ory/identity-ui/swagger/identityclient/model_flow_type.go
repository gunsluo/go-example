/*
 * Identity
 *
 * Welcome to the Identity HTTP API documentation! You will find documentation for all HTTP APIs here.
 *
 * API version: latest
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package identityclient

import (
	"encoding/json"
	"fmt"
)

// FlowType The flow type can either be `api` or `browser`.
type FlowType string

// List of flowType
const (
	FLOWTYPE_BROWSER FlowType = "browser"
	FLOWTYPE_API FlowType = "api"
)

var allowedFlowTypeEnumValues = []FlowType{
	"browser",
	"api",
}

func (v *FlowType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := FlowType(value)
	for _, existing := range allowedFlowTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid FlowType", value)
}

// NewFlowTypeFromValue returns a pointer to a valid FlowType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewFlowTypeFromValue(v string) (*FlowType, error) {
	ev := FlowType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for FlowType: valid values are %v", v, allowedFlowTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v FlowType) IsValid() bool {
	for _, existing := range allowedFlowTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to flowType value
func (v FlowType) Ptr() *FlowType {
	return &v
}

type NullableFlowType struct {
	value *FlowType
	isSet bool
}

func (v NullableFlowType) Get() *FlowType {
	return v.value
}

func (v *NullableFlowType) Set(val *FlowType) {
	v.value = val
	v.isSet = true
}

func (v NullableFlowType) IsSet() bool {
	return v.isSet
}

func (v *NullableFlowType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFlowType(val *FlowType) *NullableFlowType {
	return &NullableFlowType{value: val, isSet: true}
}

func (v NullableFlowType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFlowType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

