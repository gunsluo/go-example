/*
 * Identity
 *
 * Welcome to the Identity HTTP API documentation! You will find documentation for all HTTP APIs here.
 *
 * API version: latest
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package identityclient

import (
	"encoding/json"
)

// SubmitSettingsFlowBodyWithPassword struct for SubmitSettingsFlowBodyWithPassword
type SubmitSettingsFlowBodyWithPassword struct {
	// CSRFToken is the anti-CSRF token
	CsrfToken *string `json:"csrf_token,omitempty"`
	// Method  Should be set to password when trying to update a password.
	Method string `json:"method"`
	// Password is the updated password
	Password string `json:"password"`
}

// NewSubmitSettingsFlowBodyWithPassword instantiates a new SubmitSettingsFlowBodyWithPassword object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubmitSettingsFlowBodyWithPassword(method string, password string) *SubmitSettingsFlowBodyWithPassword {
	this := SubmitSettingsFlowBodyWithPassword{}
	this.Method = method
	this.Password = password
	return &this
}

// NewSubmitSettingsFlowBodyWithPasswordWithDefaults instantiates a new SubmitSettingsFlowBodyWithPassword object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubmitSettingsFlowBodyWithPasswordWithDefaults() *SubmitSettingsFlowBodyWithPassword {
	this := SubmitSettingsFlowBodyWithPassword{}
	return &this
}

// GetCsrfToken returns the CsrfToken field value if set, zero value otherwise.
func (o *SubmitSettingsFlowBodyWithPassword) GetCsrfToken() string {
	if o == nil || o.CsrfToken == nil {
		var ret string
		return ret
	}
	return *o.CsrfToken
}

// GetCsrfTokenOk returns a tuple with the CsrfToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubmitSettingsFlowBodyWithPassword) GetCsrfTokenOk() (*string, bool) {
	if o == nil || o.CsrfToken == nil {
		return nil, false
	}
	return o.CsrfToken, true
}

// HasCsrfToken returns a boolean if a field has been set.
func (o *SubmitSettingsFlowBodyWithPassword) HasCsrfToken() bool {
	if o != nil && o.CsrfToken != nil {
		return true
	}

	return false
}

// SetCsrfToken gets a reference to the given string and assigns it to the CsrfToken field.
func (o *SubmitSettingsFlowBodyWithPassword) SetCsrfToken(v string) {
	o.CsrfToken = &v
}

// GetMethod returns the Method field value
func (o *SubmitSettingsFlowBodyWithPassword) GetMethod() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Method
}

// GetMethodOk returns a tuple with the Method field value
// and a boolean to check if the value has been set.
func (o *SubmitSettingsFlowBodyWithPassword) GetMethodOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Method, true
}

// SetMethod sets field value
func (o *SubmitSettingsFlowBodyWithPassword) SetMethod(v string) {
	o.Method = v
}

// GetPassword returns the Password field value
func (o *SubmitSettingsFlowBodyWithPassword) GetPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *SubmitSettingsFlowBodyWithPassword) GetPasswordOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Password, true
}

// SetPassword sets field value
func (o *SubmitSettingsFlowBodyWithPassword) SetPassword(v string) {
	o.Password = v
}

func (o SubmitSettingsFlowBodyWithPassword) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CsrfToken != nil {
		toSerialize["csrf_token"] = o.CsrfToken
	}
	if true {
		toSerialize["method"] = o.Method
	}
	if true {
		toSerialize["password"] = o.Password
	}
	return json.Marshal(toSerialize)
}

type NullableSubmitSettingsFlowBodyWithPassword struct {
	value *SubmitSettingsFlowBodyWithPassword
	isSet bool
}

func (v NullableSubmitSettingsFlowBodyWithPassword) Get() *SubmitSettingsFlowBodyWithPassword {
	return v.value
}

func (v *NullableSubmitSettingsFlowBodyWithPassword) Set(val *SubmitSettingsFlowBodyWithPassword) {
	v.value = val
	v.isSet = true
}

func (v NullableSubmitSettingsFlowBodyWithPassword) IsSet() bool {
	return v.isSet
}

func (v *NullableSubmitSettingsFlowBodyWithPassword) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubmitSettingsFlowBodyWithPassword(val *SubmitSettingsFlowBodyWithPassword) *NullableSubmitSettingsFlowBodyWithPassword {
	return &NullableSubmitSettingsFlowBodyWithPassword{value: val, isSet: true}
}

func (v NullableSubmitSettingsFlowBodyWithPassword) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubmitSettingsFlowBodyWithPassword) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


