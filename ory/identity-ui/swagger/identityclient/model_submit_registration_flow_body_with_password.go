/*
 * Identity
 *
 * Welcome to the Identity HTTP API documentation! You will find documentation for all HTTP APIs here.
 *
 * API version: latest
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package identityclient

import (
	"encoding/json"
)

// SubmitRegistrationFlowBodyWithPassword SubmitRegistrationFlowBodyWithPassword is used to decode the registration form payload when using the password method.
type SubmitRegistrationFlowBodyWithPassword struct {
	// Password to sign the user up with
	ConfirmPassword string `json:"confirm_password"`
	// The CSRF Token
	CsrfToken *string `json:"csrf_token,omitempty"`
	// Method to use  This field must be set to `password` when using the password method.
	Method string `json:"method"`
	// Password to sign the user up with
	Password string `json:"password"`
	Traits RegistrationTraits `json:"traits"`
}

// NewSubmitRegistrationFlowBodyWithPassword instantiates a new SubmitRegistrationFlowBodyWithPassword object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubmitRegistrationFlowBodyWithPassword(confirmPassword string, method string, password string, traits RegistrationTraits) *SubmitRegistrationFlowBodyWithPassword {
	this := SubmitRegistrationFlowBodyWithPassword{}
	this.ConfirmPassword = confirmPassword
	this.Method = method
	this.Password = password
	this.Traits = traits
	return &this
}

// NewSubmitRegistrationFlowBodyWithPasswordWithDefaults instantiates a new SubmitRegistrationFlowBodyWithPassword object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubmitRegistrationFlowBodyWithPasswordWithDefaults() *SubmitRegistrationFlowBodyWithPassword {
	this := SubmitRegistrationFlowBodyWithPassword{}
	return &this
}

// GetConfirmPassword returns the ConfirmPassword field value
func (o *SubmitRegistrationFlowBodyWithPassword) GetConfirmPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ConfirmPassword
}

// GetConfirmPasswordOk returns a tuple with the ConfirmPassword field value
// and a boolean to check if the value has been set.
func (o *SubmitRegistrationFlowBodyWithPassword) GetConfirmPasswordOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ConfirmPassword, true
}

// SetConfirmPassword sets field value
func (o *SubmitRegistrationFlowBodyWithPassword) SetConfirmPassword(v string) {
	o.ConfirmPassword = v
}

// GetCsrfToken returns the CsrfToken field value if set, zero value otherwise.
func (o *SubmitRegistrationFlowBodyWithPassword) GetCsrfToken() string {
	if o == nil || o.CsrfToken == nil {
		var ret string
		return ret
	}
	return *o.CsrfToken
}

// GetCsrfTokenOk returns a tuple with the CsrfToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubmitRegistrationFlowBodyWithPassword) GetCsrfTokenOk() (*string, bool) {
	if o == nil || o.CsrfToken == nil {
		return nil, false
	}
	return o.CsrfToken, true
}

// HasCsrfToken returns a boolean if a field has been set.
func (o *SubmitRegistrationFlowBodyWithPassword) HasCsrfToken() bool {
	if o != nil && o.CsrfToken != nil {
		return true
	}

	return false
}

// SetCsrfToken gets a reference to the given string and assigns it to the CsrfToken field.
func (o *SubmitRegistrationFlowBodyWithPassword) SetCsrfToken(v string) {
	o.CsrfToken = &v
}

// GetMethod returns the Method field value
func (o *SubmitRegistrationFlowBodyWithPassword) GetMethod() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Method
}

// GetMethodOk returns a tuple with the Method field value
// and a boolean to check if the value has been set.
func (o *SubmitRegistrationFlowBodyWithPassword) GetMethodOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Method, true
}

// SetMethod sets field value
func (o *SubmitRegistrationFlowBodyWithPassword) SetMethod(v string) {
	o.Method = v
}

// GetPassword returns the Password field value
func (o *SubmitRegistrationFlowBodyWithPassword) GetPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *SubmitRegistrationFlowBodyWithPassword) GetPasswordOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Password, true
}

// SetPassword sets field value
func (o *SubmitRegistrationFlowBodyWithPassword) SetPassword(v string) {
	o.Password = v
}

// GetTraits returns the Traits field value
func (o *SubmitRegistrationFlowBodyWithPassword) GetTraits() RegistrationTraits {
	if o == nil {
		var ret RegistrationTraits
		return ret
	}

	return o.Traits
}

// GetTraitsOk returns a tuple with the Traits field value
// and a boolean to check if the value has been set.
func (o *SubmitRegistrationFlowBodyWithPassword) GetTraitsOk() (*RegistrationTraits, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Traits, true
}

// SetTraits sets field value
func (o *SubmitRegistrationFlowBodyWithPassword) SetTraits(v RegistrationTraits) {
	o.Traits = v
}

func (o SubmitRegistrationFlowBodyWithPassword) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["confirm_password"] = o.ConfirmPassword
	}
	if o.CsrfToken != nil {
		toSerialize["csrf_token"] = o.CsrfToken
	}
	if true {
		toSerialize["method"] = o.Method
	}
	if true {
		toSerialize["password"] = o.Password
	}
	if true {
		toSerialize["traits"] = o.Traits
	}
	return json.Marshal(toSerialize)
}

type NullableSubmitRegistrationFlowBodyWithPassword struct {
	value *SubmitRegistrationFlowBodyWithPassword
	isSet bool
}

func (v NullableSubmitRegistrationFlowBodyWithPassword) Get() *SubmitRegistrationFlowBodyWithPassword {
	return v.value
}

func (v *NullableSubmitRegistrationFlowBodyWithPassword) Set(val *SubmitRegistrationFlowBodyWithPassword) {
	v.value = val
	v.isSet = true
}

func (v NullableSubmitRegistrationFlowBodyWithPassword) IsSet() bool {
	return v.isSet
}

func (v *NullableSubmitRegistrationFlowBodyWithPassword) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubmitRegistrationFlowBodyWithPassword(val *SubmitRegistrationFlowBodyWithPassword) *NullableSubmitRegistrationFlowBodyWithPassword {
	return &NullableSubmitRegistrationFlowBodyWithPassword{value: val, isSet: true}
}

func (v NullableSubmitRegistrationFlowBodyWithPassword) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubmitRegistrationFlowBodyWithPassword) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


