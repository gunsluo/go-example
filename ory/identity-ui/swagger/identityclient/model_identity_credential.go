/*
 * Identity
 *
 * Welcome to the Identity HTTP API documentation! You will find documentation for all HTTP APIs here.
 *
 * API version: latest
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package identityclient

import (
	"encoding/json"
	"time"
)

// IdentityCredential IdentityCredential represents a specific credential type
type IdentityCredential struct {
	Config map[string]interface{} `json:"config,omitempty"`
	// CreatedAt is a helper struct field for.
	CreatedAt *time.Time `json:"created_at,omitempty"`
	CredentialType *CredentialsType `json:"credential_type,omitempty"`
	// ID is the identity credential's unique identifier.
	Id *string `json:"id,omitempty"`
	Identifiers []IdentityCredentialIdentifier `json:"identifiers,omitempty"`
	// UpdatedAt is a helper struct field for.
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
}

// NewIdentityCredential instantiates a new IdentityCredential object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityCredential() *IdentityCredential {
	this := IdentityCredential{}
	return &this
}

// NewIdentityCredentialWithDefaults instantiates a new IdentityCredential object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityCredentialWithDefaults() *IdentityCredential {
	this := IdentityCredential{}
	return &this
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *IdentityCredential) GetConfig() map[string]interface{} {
	if o == nil || o.Config == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityCredential) GetConfigOk() (map[string]interface{}, bool) {
	if o == nil || o.Config == nil {
		return nil, false
	}
	return o.Config, true
}

// HasConfig returns a boolean if a field has been set.
func (o *IdentityCredential) HasConfig() bool {
	if o != nil && o.Config != nil {
		return true
	}

	return false
}

// SetConfig gets a reference to the given map[string]interface{} and assigns it to the Config field.
func (o *IdentityCredential) SetConfig(v map[string]interface{}) {
	o.Config = v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *IdentityCredential) GetCreatedAt() time.Time {
	if o == nil || o.CreatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityCredential) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *IdentityCredential) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *IdentityCredential) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetCredentialType returns the CredentialType field value if set, zero value otherwise.
func (o *IdentityCredential) GetCredentialType() CredentialsType {
	if o == nil || o.CredentialType == nil {
		var ret CredentialsType
		return ret
	}
	return *o.CredentialType
}

// GetCredentialTypeOk returns a tuple with the CredentialType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityCredential) GetCredentialTypeOk() (*CredentialsType, bool) {
	if o == nil || o.CredentialType == nil {
		return nil, false
	}
	return o.CredentialType, true
}

// HasCredentialType returns a boolean if a field has been set.
func (o *IdentityCredential) HasCredentialType() bool {
	if o != nil && o.CredentialType != nil {
		return true
	}

	return false
}

// SetCredentialType gets a reference to the given CredentialsType and assigns it to the CredentialType field.
func (o *IdentityCredential) SetCredentialType(v CredentialsType) {
	o.CredentialType = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *IdentityCredential) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityCredential) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *IdentityCredential) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *IdentityCredential) SetId(v string) {
	o.Id = &v
}

// GetIdentifiers returns the Identifiers field value if set, zero value otherwise.
func (o *IdentityCredential) GetIdentifiers() []IdentityCredentialIdentifier {
	if o == nil || o.Identifiers == nil {
		var ret []IdentityCredentialIdentifier
		return ret
	}
	return o.Identifiers
}

// GetIdentifiersOk returns a tuple with the Identifiers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityCredential) GetIdentifiersOk() ([]IdentityCredentialIdentifier, bool) {
	if o == nil || o.Identifiers == nil {
		return nil, false
	}
	return o.Identifiers, true
}

// HasIdentifiers returns a boolean if a field has been set.
func (o *IdentityCredential) HasIdentifiers() bool {
	if o != nil && o.Identifiers != nil {
		return true
	}

	return false
}

// SetIdentifiers gets a reference to the given []IdentityCredentialIdentifier and assigns it to the Identifiers field.
func (o *IdentityCredential) SetIdentifiers(v []IdentityCredentialIdentifier) {
	o.Identifiers = v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *IdentityCredential) GetUpdatedAt() time.Time {
	if o == nil || o.UpdatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityCredential) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *IdentityCredential) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *IdentityCredential) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o IdentityCredential) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Config != nil {
		toSerialize["config"] = o.Config
	}
	if o.CreatedAt != nil {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.CredentialType != nil {
		toSerialize["credential_type"] = o.CredentialType
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Identifiers != nil {
		toSerialize["identifiers"] = o.Identifiers
	}
	if o.UpdatedAt != nil {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return json.Marshal(toSerialize)
}

type NullableIdentityCredential struct {
	value *IdentityCredential
	isSet bool
}

func (v NullableIdentityCredential) Get() *IdentityCredential {
	return v.value
}

func (v *NullableIdentityCredential) Set(val *IdentityCredential) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityCredential) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityCredential) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityCredential(val *IdentityCredential) *NullableIdentityCredential {
	return &NullableIdentityCredential{value: val, isSet: true}
}

func (v NullableIdentityCredential) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityCredential) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


