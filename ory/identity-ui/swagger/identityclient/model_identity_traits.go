/*
 * Identity
 *
 * Welcome to the Identity HTTP API documentation! You will find documentation for all HTTP APIs here.
 *
 * API version: latest
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package identityclient

import (
	"encoding/json"
)

// IdentityTraits struct for IdentityTraits
type IdentityTraits struct {
	// The identity's email  It's optional, have at least one email and mobile
	Email *string `json:"email,omitempty"`
	// The identity's mobile  It's optional, have at least one email and mobile
	Mobile *string `json:"mobile,omitempty"`
}

// NewIdentityTraits instantiates a new IdentityTraits object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityTraits() *IdentityTraits {
	this := IdentityTraits{}
	return &this
}

// NewIdentityTraitsWithDefaults instantiates a new IdentityTraits object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityTraitsWithDefaults() *IdentityTraits {
	this := IdentityTraits{}
	return &this
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *IdentityTraits) GetEmail() string {
	if o == nil || o.Email == nil {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityTraits) GetEmailOk() (*string, bool) {
	if o == nil || o.Email == nil {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *IdentityTraits) HasEmail() bool {
	if o != nil && o.Email != nil {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *IdentityTraits) SetEmail(v string) {
	o.Email = &v
}

// GetMobile returns the Mobile field value if set, zero value otherwise.
func (o *IdentityTraits) GetMobile() string {
	if o == nil || o.Mobile == nil {
		var ret string
		return ret
	}
	return *o.Mobile
}

// GetMobileOk returns a tuple with the Mobile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityTraits) GetMobileOk() (*string, bool) {
	if o == nil || o.Mobile == nil {
		return nil, false
	}
	return o.Mobile, true
}

// HasMobile returns a boolean if a field has been set.
func (o *IdentityTraits) HasMobile() bool {
	if o != nil && o.Mobile != nil {
		return true
	}

	return false
}

// SetMobile gets a reference to the given string and assigns it to the Mobile field.
func (o *IdentityTraits) SetMobile(v string) {
	o.Mobile = &v
}

func (o IdentityTraits) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Email != nil {
		toSerialize["email"] = o.Email
	}
	if o.Mobile != nil {
		toSerialize["mobile"] = o.Mobile
	}
	return json.Marshal(toSerialize)
}

type NullableIdentityTraits struct {
	value *IdentityTraits
	isSet bool
}

func (v NullableIdentityTraits) Get() *IdentityTraits {
	return v.value
}

func (v *NullableIdentityTraits) Set(val *IdentityTraits) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityTraits) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityTraits) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityTraits(val *IdentityTraits) *NullableIdentityTraits {
	return &NullableIdentityTraits{value: val, isSet: true}
}

func (v NullableIdentityTraits) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityTraits) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


