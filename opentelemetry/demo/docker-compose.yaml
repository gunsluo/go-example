version: "3"
services:

  # Jaeger
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    ports:
      - "16686:16686"
      - "14268"
      - "14250"

  # Collector
  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.3.0
    container_name: otel-collector
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "1888:1888"   # pprof extension
      - "13133:13133" # health_check extension
      - "8889:8889"   # Prometheus exporter metrics
      - "55679:55679" # receiver
      # - "8888:8888"   # Prometheus metrics exposed by the collector
    depends_on:
      - jaeger

  # Agent
  otel-agent:
    image: otel/opentelemetry-collector-contrib:0.3.0
    container_name: otel-agent
    command: ["--config=/etc/otel-agent-config.yaml"]
    volumes:
      - ./otel-agent-config.yaml:/etc/otel-agent-config.yaml
    ports:
      - "1777:1777"   # pprof extension
      - "13133"       # health_check
      - "55680:55680" # receiver
      # - "8887:8888"   # Prometheus metrics exposed by the agent
      # - "14268"       # Jaeger receiver
    depends_on:
      - otel-collector

  postgres:
    image: postgres:11.1-alpine
    container_name: postgres 
    restart: on-failure
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      PGDATA: /var/lib/postgresql/data
    ports:
      - 5432:5432
    volumes:
      - postgres-data:/var/lib/postgresql/data

  # Logging
  loki:
    image: grafana/loki:1.5.0
    container_name: loki
    volumes:
      - ./loki-config.yaml:/etc/loki/config.yaml
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/config.yaml

  grafana:
    image: grafana/grafana:master
    container_name: grafana
    ports:
      - "3000:3000"

  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  # Agent
  demo:
    image: golang:1.14.0-buster
    container_name: demo
    logging:
      driver: loki
      options:
        loki-url: http://host.docker.internal:3100/loki/api/v1/push
    command: >
        go run main.go all --dsn=postgres://postgres:password@postgres:5432/trace?sslmode=disable
    working_dir: /go/src/github.com/gunsluo/go-example/opentelemetry/demo
    volumes:
      - .:/go/src/github.com/gunsluo/go-example/opentelemetry/demo
    environment:
      GO111MODULE: "off"
      OTLP_AGENT_EDNPOINT: otel-agent:55680
      TRACE_ENABLED: "true"
      METRIC_ENABLED: "true"
    ports:
      - "8080:8080"


volumes:
  postgres-data:
